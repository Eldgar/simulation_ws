pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                sh '''
                cd $WORKSPACE/src/
                sudo docker build -t tortoisebot_ros1 .
                '''
            }
        }
        stage('Launch Waypoints Action Server in Docker') {
            steps {
                sh '''
                # If a container named "waypoints_container" already exists, stop and remove it.
                if [ "$(sudo docker ps -aq -f name=waypoints_container)" ]; then
                    echo "Stopping and removing existing waypoints_container..."
                    sudo docker stop waypoints_container || true
                    sudo docker rm waypoints_container || true
                fi

                # Launch the waypoints action server in detached mode (headless)
                sudo docker run -d \
                    --name waypoints_container \
                    tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && rosrun tortoisebot_waypoints tortoisebot_action_server.py"

                echo "Waypoints action server container started."
                # Allow time for the action server (and ROS master) to initialize.
                sleep 30
                '''
            }
        }
        stage('Run Waypoints Test in Docker') {
            steps {
                sh '''
                # Run the test in a new container. Using --net=host allows the test container to connect to the same ROS master.
                sudo docker run --rm --net=host tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && rostest tortoisebot_waypoints waypoints_test.test --reuse-master"

                echo "Waypoints test completed."
                '''
            }
        }
        stage('Cleanup') {
            steps {
                sh '''
                echo "Stopping and removing waypoints_container..."
                sudo docker stop waypoints_container || true
                sudo docker rm waypoints_container || true
                echo "Cleanup complete."
                '''
            }
        }
    }
    triggers {
        pollSCM('H/3 * * * *')
    }
}



