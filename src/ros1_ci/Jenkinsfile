pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                sh '''
                cd $WORKSPACE/src/
                sudo docker build -t tortoisebot_ros1 .
                '''
            }
        }
        stage('Launch Simulation and Action Server in Docker') {
            steps {
                sh '''
                # If a container named "simulation_container" already exists, stop and remove it.
                if [ "$(sudo docker ps -aq -f name=simulation_container)" ]; then
                    echo "Stopping and removing existing simulation_container..."
                    sudo docker stop simulation_container || true
                    sudo docker rm simulation_container || true
                fi

                # Launch a container that starts Gazebo (using your launch file) and then the waypoints action server.
                # - The command first sources the ROS environment.
                # - It launches the Gazebo simulation in the background (&).
                # - It waits 10 seconds for Gazebo to initialize.
                # - Then it starts the waypoints action server.
                # - Finally, it sleeps 300 seconds so that the simulation remains running while the tests run.
                sudo docker run -d \
                    --name simulation_container \
                    tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && \
                              roslaunch tortoisebot_gazebo tortoisebot_playground.launch & sleep 10 && \
                              rosrun tortoisebot_waypoints tortoisebot_action_server.py && sleep 300"

                echo "Simulation and Action Server launched."
                '''
            }
        }
        stage('Run Waypoints Test in Docker') {
            steps {
                sh '''
                # Run the test in a new container.
                sudo docker run --rm tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && \
                              rostest tortoisebot_waypoints waypoints_test.test --reuse-master"

                echo "Waypoints test completed."
                '''
            }
        }
        stage('Cleanup') {
            steps {
                sh '''
                echo "Stopping and removing simulation_container..."
                sudo docker stop simulation_container || true
                sudo docker rm simulation_container || true
                echo "Cleanup complete."
                '''
            }
        }
    }
    triggers {
        // Poll the repository every 3 minutes.
        pollSCM('H/3 * * * *')
    }
}




