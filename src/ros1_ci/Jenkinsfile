pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                sh '''
                cd $WORKSPACE/src/
                sudo docker build -t tortoisebot_ros1 .
                '''
            }
        }
        stage('Ensure Executable Permissions') {
            steps {
                sh '''
                echo "Setting executable permissions on action server and test scripts..."
                chmod +x ~/simulation_ws/src/tortoisebot_waypoints/scripts/tortoisebot_action_server.py
                chmod +x ~/simulation_ws/src/tortoisebot_waypoints/test/waypoints_test.py
                echo "Executable permissions set."
                '''
            }
        }
        stage('Launch Simulation and Action Server in Docker') {
            steps {
                sh '''
                # Remove any existing container named "simulation_container"
                if [ "$(sudo docker ps -aq -f name=simulation_container)" ]; then
                    echo "Stopping and removing existing simulation_container..."
                    sudo docker stop simulation_container || true
                    sudo docker rm simulation_container || true
                fi

                echo "Launching Gazebo and Action Server..."
                # Run everything in foreground to capture logs in Jenkins Console Output
                sudo docker run --rm \
                    --name simulation_container \
                    tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && \
                             roslaunch tortoisebot_gazebo tortoisebot_playground.launch & sleep 10 && \
                             rosrun tortoisebot_waypoints tortoisebot_action_server.py"
                '''
            }
        }
        stage('Run Waypoints Test in Docker') {
            steps {
                sh '''
                echo "Running waypoints test..."
                sudo docker run --rm \
                    tortoisebot_ros1 \
                    bash -c "source /opt/ros/noetic/setup.bash && source devel/setup.bash && \
                             rostest tortoisebot_waypoints waypoints_test.test --reuse-master"
                echo "Waypoints test completed."
                '''
            }
        }
    }
    triggers {
        // Poll the repository every 3 minutes.
        pollSCM('H/3 * * * *')
    }
}






