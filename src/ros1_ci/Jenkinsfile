pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                sh '''
                cd $WORKSPACE/src/
                sudo docker build -t tortoisebot_ros1 .
                '''
            }
        }
        stage('Ensure Executable Permissions') {
            steps {
                sh '''
                echo "Setting executable permissions..."
                chmod +x ~/simulation_ws/src/tortoisebot_waypoints/scripts/tortoisebot_action_server.py
                chmod +x ~/simulation_ws/src/tortoisebot_waypoints/test/waypoints_test.py
                '''
            }
        }
        stage('Launch Gazebo & Action Server in Docker') {
            steps {
                sh '''
                echo "Stopping and removing any existing simulation container..."
                sudo docker stop simulation_container || true
                sudo docker rm simulation_container || true
                
                echo "Launching Gazebo and Action Server..."
                sudo docker run --rm --name simulation_container tortoisebot_ros1 \
                    bash -c "
                        source /opt/ros/noetic/setup.bash && source devel/setup.bash &&
                        echo 'Starting Gazebo...' &&
                        roslaunch tortoisebot_gazebo tortoisebot_playground.launch --screen &
                        sleep 10 &&
                        echo 'Gazebo launched, starting Action Server...' &&
                        rosrun tortoisebot_waypoints tortoisebot_action_server.py --screen
                    "
                '''
            }
        }
        stage('Run Waypoints Test') {
            steps {
                sh '''
                echo "Running Waypoints Test..."
                source /opt/ros/noetic/setup.bash && source ~/simulation_ws/devel/setup.bash
                rostest tortoisebot_waypoints waypoints_test.test --reuse-master --text
                '''
            }
        }
        stage('Cleanup') {
            steps {
                sh '''
                echo "Stopping ROS Nodes..."
                source /opt/ros/noetic/setup.bash && source ~/simulation_ws/devel/setup.bash
                rosnode kill -a || true
                '''
            }
        }
    }
    triggers {
        pollSCM('H/3 * * * *')
    }
}









